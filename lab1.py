'''
Составить программу, решающая матрицу методом Гаусса
def Gauss(a,b): функция, выполняющая метод Гаусса
'''
import numpy as np  # Импортируем библиотеку numpy для работы с массивами

def Gauss(a,b):  # Объявляем функцию Gauss с двумя аргументами a и b
    n = len(b)  # Вычисляем длину вектора b, который будет равен количеству уравнений

    for k in range (0,n-1):  # Начинаем перебор по строкам до предпоследней строки
        for i in range(k+1,n):  # Перебираем строки ниже текущей строки k
            if a[i,k] != 0:  # Проверяем, что элемент не равен нулю
                lam = a[i,k]/a[k,k]  # Вычисляем множитель lam
                a[i,k+1:n] = a[i,k+1:n] - lam*a[k,k+1:n]  # Обновляем значения в матрице A
                b[i] = b[i] - lam*b[k]  # Обновляем значения в векторе b
    for k in range(n-1,-1,-1):  # Начинаем обратный проход от последней строки до первой
        b[k] = (b[k] - np.dot(a[k,k+1:n],b[k+1:n]))/a[k,k]  # Решаем уравнения относительно неизвестных
    return b  # Возвращаем вектор решений

A = np.array([[4.0,-2.0,1.0],[-2.0,4.0,-2.0],[1.0,-2.0,4.0]])  # Исходная матрица A
B = np.array([11.0,-16.0,17.0])  # Исходный вектор B
print(A)  # Выводим матрицу A
print(B)  # Выводим вектор B
result = Gauss(A,B)  # Решаем систему уравнений методом Гаусса
print(result)  # Выводим результат решения системы уравнений
